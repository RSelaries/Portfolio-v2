@import url("https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");

body,
body * {
    margin: 0;
}

body {
    overflow: hidden;
    background-color: #666;
}

::-webkit-scrollbar {
    display: none;
}

@keyframes leave {
    0% {
        transform: translateY(0%);
    }
    50% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(-100%);
    }
}

@keyframes enter {
    0% {
        transform: translateY(100%);
    }
    100% {
        transform: translateY(0%);
    }
}

@keyframes fade-in {
    0% {
        color: #c9070700;
    }
    50% {
        color: #c9070700;
    }
    100% {
        color: #c90707;
    }
}

@keyframes fade-in1 {
    0% {
        color: #c9070700;
    }
    100% {
        color: #c90707;
    }
}

@keyframes page-transition {
    0% {
        height: 0;
        bottom: 0;
    }
    50% {
        height: 100vh;
        bottom: 0;
    }
    100% {
        height: 0;
        bottom: 100vh;
    }
}

:root {
    --rdmNbrPx0: 4px;
    --rdmNbrPx1: -5px;
    --rdmNbrPx2: 4px;
    --rdmNbrPx3: -6px;

    --rdmNbrDeg0: 3deg;
    --rdmNbrDeg1: -2deg;
    --rdmNbrDeg2: 4deg;
    --rdmNbrDeg3: -3deg;
}

@keyframes shaking {
    0% {
        transform: translate(0, 0) rotate(0deg);
    }
    15% {
        transform: translate(var(--rdmNbrPx0), var(--rdmNbrPx1))
            rotate(var(--rdmNbrDeg0));
    }
    25% {
        transform: translate(var(--rdmNbrPx2), var(--rdmNbrPx3))
            rotate(var(--rdmNbrDeg1));
    }
    40% {
        transform: translate(var(--rdmNbrPx0), var(--rdmNbrPx1))
            rotate(var(--rdmNbrDeg2));
    }
    50% {
        transform: translate(var(--rdmNbrPx2), var(--rdmNbrPx3))
            rotate(var(--rdmNbrDeg3));
    }
    60% {
        transform: translate(var(--rdmNbrPx0), var(--rdmNbrPx1))
            rotate(var(--rdmNbrDeg0));
    }
    75% {
        transform: translate(var(--rdmNbrPx2), var(--rdmNbrPx3))
            rotate(var(--rdmNbrDeg1));
    }
    90% {
        transform: translate(var(--rdmNbrPx0), var(--rdmNbrPx1))
            rotate(var(--rdmNbrDeg2));
    }
    100% {
        transform: translate(0, 0) rotate(0deg);
    }
}
